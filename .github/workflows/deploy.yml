name: 🚀 Deploy to EC2 (Production)

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Code
        uses: actions/checkout@v4

      - name: 🛠️ Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Build app
        run: ./gradlew clean build -x test

      - name: ✅ Find and rename Spring Boot JAR
        run: |
          JAR_PATH=$(find build/libs -type f -name '*SNAPSHOT.jar' | head -n 1)
          if [ -z "$JAR_PATH" ]; then
            echo "❌ No JAR file found!"
            exit 1
          fi
          echo "✅ Found JAR: $JAR_PATH"
          mv "$JAR_PATH" build/libs/syncora.jar

      - name: 📁 Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/syncora.jar"
          target: "~/syncora-prod"

      - name: 🔁 Restart Spring Boot (systemd)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" | sudo tee /etc/syncora.env > /dev/null
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" | sudo tee -a /etc/syncora.env > /dev/null
            sudo chown ubuntu:ubuntu /home/ubuntu/syncora-prod/build/libs/syncora.jar
            sudo chmod 755 /home/ubuntu/syncora-prod/build/libs/syncora.jar
            sudo systemctl daemon-reload
            sudo systmectl stop syncora.service
            sleep 10
            sudo systemctl start syncora.service
#            sudo systemctl restart syncora.service
            sudo systemctl status syncora.service --no-pager

      - name: 🔔 Notify Slack About Deployment
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: GitHub Actions
          SLACK_ICON_EMOJI: ':rocket:'
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_MESSAGE: |
            🚀 Deployment to *production* by *${{ github.actor }}*
            Status: *${{ job.status }}*
